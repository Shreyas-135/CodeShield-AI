'use server';
/**
 * @fileOverview Explains a detected vulnerability in plain English.
 *
 * - explainVulnerability - A function that explains the vulnerability.
 * - ExplainVulnerabilityInput - The input type for the explainVulnerability function.
 * - ExplainVulnerabilityOutput - The return type for the explainVulnerability function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainVulnerabilityInputSchema = z.object({
  codeSnippet: z.string().describe('The code snippet containing the vulnerability.'),
  vulnerabilityDescription: z.string().describe('A description of the vulnerability.'),
});
export type ExplainVulnerabilityInput = z.infer<typeof ExplainVulnerabilityInputSchema>;

const ExplainVulnerabilityOutputSchema = z.object({
  plainEnglishExplanation: z.string().describe('A plain English explanation of the vulnerability.'),
  securityImpactSummary: z.string().describe('A summary of the security impact of the vulnerability.'),
  locationInCode: z.string().describe('The location of the vulnerability in the code.'),
});
export type ExplainVulnerabilityOutput = z.infer<typeof ExplainVulnerabilityOutputSchema>;

export async function explainVulnerability(input: ExplainVulnerabilityInput): Promise<ExplainVulnerabilityOutput> {
  return explainVulnerabilityFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainVulnerabilityPrompt',
  input: {schema: ExplainVulnerabilityInputSchema},
  output: {schema: ExplainVulnerabilityOutputSchema},
  prompt: `You are a security expert explaining code vulnerabilities to developers and non-technical stakeholders.

  Given the following code snippet and vulnerability description, provide a plain English explanation of the vulnerability, a summary of its security impact, and the location of the vulnerability in the code.

  Vulnerability Description: {{vulnerabilityDescription}}

  Code Snippet:
  '''
  {{codeSnippet}}
  '''

  Plain English Explanation: (Explain why itâ€™s a risk in non-technical terms.)
  Security Impact Summary: (Provide a concise summary of the potential security impact.)
  Location in Code: (Show the exact location of the vulnerability in the code snippet.)`,
});

const explainVulnerabilityFlow = ai.defineFlow(
  {
    name: 'explainVulnerabilityFlow',
    inputSchema: ExplainVulnerabilityInputSchema,
    outputSchema: ExplainVulnerabilityOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
