"use client";

import { useState } from 'react';
import { Bug, ShieldCheck, ShieldAlert, Loader } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import { detectMalware, type MalwareDetectionOutput } from '@/ai/flows/detect-malware';
import { useToast } from "@/hooks/use-toast"

export function MalwareDetector() {
  const [code, setCode] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<MalwareDetectionOutput | null>(null);
  const { toast } = useToast();

  const handleScan = async () => {
    if (!code.trim()) {
      toast({
        variant: "destructive",
        title: "Error",
        description: "Please enter some code to scan.",
      })
      return;
    }

    setIsLoading(true);
    setResult(null);

    try {
      const scanResult = await detectMalware({ codebase: code });
      setResult(scanResult);
    } catch (error) {
      console.error('Malware detection failed:', error);
      toast({
        variant: "destructive",
        title: "Scan Failed",
        description: "Could not complete the malware scan. Please try again.",
      })
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-8">
      <header className="space-y-2">
        <div className="flex items-center gap-2">
          <Bug className="text-primary w-8 h-8" />
          <h1 className="text-3xl font-bold">Malware Detector</h1>
        </div>
        <p className="text-muted-foreground">
          Scan code for potential trojan horses and viruses using a fine-tuned LLM. Focuses on suspicious patterns, file uploads, and new dependencies.
        </p>
      </header>

      <Card>
        <CardHeader>
          <CardTitle>Codebase to Scan</CardTitle>
          <CardDescription>Paste the code you want to analyze for malware.</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <Textarea
            placeholder="Paste your code here..."
            value={code}
            onChange={(e) => setCode(e.target.value)}
            className="min-h-[250px] font-code text-sm"
            disabled={isLoading}
          />
          <Button onClick={handleScan} disabled={isLoading}>
            {isLoading ? (
              <>
                <Loader className="mr-2 h-4 w-4 animate-spin" />
                Scanning...
              </>
            ) : (
              'Scan for Malware'
            )}
          </Button>
        </CardContent>
      </Card>

      {result && (
        <Card>
          <CardHeader>
            <CardTitle>Scan Results</CardTitle>
          </CardHeader>
          <CardContent>
            {result.hasMalware ? (
              <Alert variant="destructive">
                <ShieldAlert className="h-4 w-4" />
                <AlertTitle>Malware Detected!</AlertTitle>
                <AlertDescription>
                  <p className="font-semibold mt-2">Details:</p>
                  <p className="mt-1">{result.details}</p>
                </AlertDescription>
              </Alert>
            ) : (
              <Alert>
                <ShieldCheck className="h-4 w-4" />
                <AlertTitle>No Malware Detected</AlertTitle>
                <AlertDescription>
                  <p className="mt-1">{result.details || "Our scan did not find any indicators of malware in the provided code."}</p>
                </AlertDescription>
              </Alert>
            )}
          </CardContent>
        </Card>
      )}
    </div>
  );
}
